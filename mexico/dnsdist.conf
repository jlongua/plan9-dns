-- helios.plan9-dns.com

local fullchain = "/etc/zerossl/plan9-dns.com_ecc/fullchain.pem"
local privkey = "/etc/zerossl/plan9-dns.com_ecc/private.key"

setLocal("127.0.0.1:5353")

-- allow query from all IP addresses
addACL('0.0.0.0/0')
addACL('::/0')

-- add a DoH resolver listening on port 443 of all interfaces
addDOHLocal(
    "0.0.0.0", fullchain , privkey,
    { "/dns-query" }, { reusePort=true, tcpFastOpenSize=0 }
)

addDOHLocal(
    "[::]", fullchain , privkey,
    { "/dns-query" }, { reusePort=true, tcpFastOpenSize=0 }
)

-- add a DoT resolver listening on port 853 of all interfaces
addTLSLocal(
    "0.0.0.0", fullchain, privkey,
    { reusePort=true, tcpFastOpenSize=0 }
)

addTLSLocal(
    "[::]", fullchain, privkey,
    { reusePort=true, tcpFastOpenSize=0 }
)

-- downstream resolver
newServer({address="127.0.0.1:53", qps=0, name="kresd@1"})

pc = newPacketCache(
    100000,
    {maxTTL=86400, minTTL=0, temporaryFailureTTL=60, staleTTL=60, dontAge=false}
)
getPool(""):setCache(pc)

-- enable local control socket, need to generate key
controlSocket('127.0.0.1:5199')
setKey("tLnRigZztCzbQhtR9GPprCv5y7dpanMCJ8JD+TRaumE=")

-- dynBlock
local dbr = dynBlockRulesGroup()
dbr:setQueryRate(50, 10, "Exceeded query rate", 60)
dbr:setRCodeRate(DNSRCode.NXDOMAIN, 10, 10, "Exceeded NXD rate", 60)
dbr:setRCodeRate(DNSRCode.SERVFAIL, 10, 10, "Exceeded ServFail rate", 60)
dbr:setQTypeRate(DNSQType.ANY, 5, 10, "Exceeded ANY rate", 60)
dbr:setResponseByteRate(10000, 10, "Exceeded resp BW rate", 60)

function maintenance()
dbr:apply()
end
